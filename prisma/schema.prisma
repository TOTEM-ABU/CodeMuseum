generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProgrammingLanguage {
  JAVASCRIPT
  PYTHON
  TYPESCRIPT
  C
  JAVA
  CPP
  CSHARP
  RUBY
  PHP
  SWIFT
  KOTLIN
  RUST
  GOLANG
  ELIXIR
  R
  HASKELL
  SCALA
  DART
}

model User {
  id        String  @id @default(uuid())
  username  String  @unique
  email     String?
  password  String
  githubURL String?

  comments   Comment[]
  posts      Post[]
  categories Category[]
  likes      Like[]

  createdAt DateTime @default(now())
}

model Comment {
  id      String @id @default(uuid())
  message String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  postId String?
  Post   Post?   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
}

model Post {
  id    String @id @default(uuid())
  title String
  code  String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  comments     Comment[]
  likes        Like[]
  PostCategory PostCategory[]

  createdAt DateTime @default(now())
}

model PostCategory {
  id String @id @default(uuid())

  postId String
  post   Post   @relation(fields: [postId], references: [id])

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
}

model Category {
  id   String @id @default(uuid())
  name String

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  PostCategory PostCategory[]

  createdAt DateTime @default(now())
}

model Like {
  id      String @id @default(uuid())
  like    Int
  dislike Int

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  postId String?
  Post   Post?   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
}
