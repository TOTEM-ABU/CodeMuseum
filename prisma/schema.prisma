generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid()) @db.Uuid
  username  String  @unique
  email     String?
  password  String
  githubURL String?

  comments Comment[]
  posts    Post[]
  likes    Like[]

  createdAt DateTime @default(now())
}

model Comment {
  id      String @id @default(uuid()) @db.Uuid
  message String

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  postId String @db.Uuid
  Post   Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
}

model Post {
  id    String @id @default(uuid()) @db.Uuid
  title String
  code  String

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  comments     Comment[]
  likes        Like[]
  PostCategory PostCategory[]

  createdAt DateTime @default(now())
}

model PostCategory {
  id String @id @default(uuid()) @db.Uuid

  postId String @db.Uuid
  post   Post   @relation(fields: [postId], references: [id])

  categoryId String   @db.Uuid
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
}

model Category {
  id   String @id @default(uuid()) @db.Uuid
  name String

  PostCategory PostCategory[]

  createdAt DateTime @default(now())
}

model Like {
  id      String @id @default(uuid()) @db.Uuid
  like    Int
  dislike Int

  userId String @db.Uuid
  User   User   @relation(fields: [userId], references: [id])

  postId String @db.Uuid
  Post   Post   @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now())
}
